<UserControl
	x:Class="FolderBrowser.Views.FolderBrowserTreeView"
	xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
	xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
	xmlns:EditInPlace="clr-namespace:InplaceEditBoxLib.Views;assembly=InplaceEditBoxLib"
	xmlns:behav="clr-namespace:FolderBrowser.Views.Behaviours"
	xmlns:bindLocal="clr-namespace:FolderBrowser.Views"
	xmlns:conv="clr-namespace:FolderBrowser.Converters"
	xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
	xmlns:fsconv="clr-namespace:FileSystemModels.Converters;assembly=FileSystemModels"
	xmlns:loc="clr-namespace:FileSystemModels.Local;assembly=FileSystemModels"
	xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
	xmlns:reskeys="clr-namespace:FolderBrowser.Themes"
	d:DesignHeight="100"
	d:DesignWidth="100"
	mc:Ignorable="d">
	<UserControl.Resources>
		<conv:UpdateBindingConverter x:Key="UpdateBindingConverter" />

		<Style
			x:Key="TreeViewStyle"
			BasedOn="{StaticResource {x:Type TreeView}}"
			TargetType="{x:Type TreeView}">
			<!--  Setter Property="TreeView.Background" Value="Transparent"/  -->
			<Setter Property="VirtualizingStackPanel.IsVirtualizing" Value="True" />
			<Setter Property="VirtualizingStackPanel.VirtualizationMode" Value="Recycling" />
			<Setter Property="TreeView.SnapsToDevicePixels" Value="True" />
			<Setter Property="TreeView.OverridesDefaultStyle" Value="True" />
			<Setter Property="ItemsControl.ItemsPanel">
				<Setter.Value>
					<ItemsPanelTemplate>
						<VirtualizingStackPanel IsItemsHost="True" />
					</ItemsPanelTemplate>
				</Setter.Value>
			</Setter>
			<Setter Property="TreeView.Template">
				<Setter.Value>
					<ControlTemplate TargetType="TreeView">
						<ScrollViewer
							Padding="3"
							CanContentScroll="True"
							Focusable="False">
							<ItemsPresenter HorizontalAlignment="Stretch" />
						</ScrollViewer>
					</ControlTemplate>
				</Setter.Value>
			</Setter>
		</Style>
	</UserControl.Resources>

	<Grid Background="{DynamicResource {x:Static reskeys:ResourceKeys.TreeViewBackgroundKey}}" IsEnabled="{Binding IsBrowseViewEnabled}">
		<!--  The treeview of folders  -->
		<TreeView
			behav:TreeViewSelectionChangedBehavior.ChangedCommand="{Binding SelectedFolderChangedCommand}"
			behav:TreeViewSelectionChangedBehavior.IsProcessing="{Binding IsBrowsing, Mode=OneWay, UpdateSourceTrigger=PropertyChanged}"
			behav:TreeViewVirtualItemBehaviour.SelectedItem="{Binding SelectedItem, Mode=OneWay, UpdateSourceTrigger=PropertyChanged}"
			VirtualizingPanel.IsVirtualizing="True"
			VirtualizingPanel.VirtualizationMode="Standard">
			<TreeView.ItemsSource>
				<MultiBinding Converter="{StaticResource UpdateBindingConverter}">
					<!--  First & Second argument control update of binding on 3rd argument  -->
					<Binding Path="IsLoaded" RelativeSource="{RelativeSource Self}" />
					<Binding
						Mode="OneWay"
						Path="UpdateView"
						UpdateSourceTrigger="PropertyChanged" />
					<Binding
						Mode="OneWay"
						Path="Root"
						UpdateSourceTrigger="PropertyChanged" />
				</MultiBinding>
			</TreeView.ItemsSource>
			<TreeView.Resources>
				<!--  Use a proxy to bind items to root properties of this collection  -->
				<bindLocal:BindingProxy x:Key="DataContextProxy" Data="{Binding}" />

				<fsconv:BrowseItemTypeToShellImageConverter x:Key="BrowseItemTypeToShellImageConverter" />
			</TreeView.Resources>

			<TreeView.ItemTemplate>
				<HierarchicalDataTemplate ItemsSource="{Binding Folders}">
					<StackPanel
						HorizontalAlignment="Stretch"
						Background="Transparent"
						Orientation="Horizontal">
						<StackPanel.InputBindings>
							<KeyBinding
								Key="F2"
								Command="{Binding Path=Data.StartRenameCommand, Source={StaticResource DataContextProxy}}"
								CommandParameter="{Binding}" />
						</StackPanel.InputBindings>
						<StackPanel.ContextMenu>
							<ContextMenu>
								<ContextMenu.Resources>
									<BooleanToVisibilityConverter x:Key="BoolToVis" />
								</ContextMenu.Resources>
								<MenuItem
									Command="{Binding Data.OpenInWindowsCommand, Source={StaticResource DataContextProxy}}"
									CommandParameter="{Binding}"
									Header="{x:Static loc:Strings.CMD_Open_in_Windows_Label}"
									ToolTip="{x:Static loc:Strings.CMD_Open_in_Windows_Label_TT}" />

								<MenuItem
									Command="{Binding Data.CopyPathCommand, Source={StaticResource DataContextProxy}}"
									CommandParameter="{Binding}"
									Header="{x:Static loc:Strings.CMD_Copy_Path_To_Clipboard_Label}"
									ToolTip="{x:Static loc:Strings.CMD_Copy_Path_To_Clipboard_Label_TT}" />

								<!--  This group of commands cannot be executed if action cannot be executed  -->
								<Separator Visibility="{Binding Data.BookmarkFolder.RecentFolderCommandCanExecute, Source={StaticResource DataContextProxy}, Converter={StaticResource BoolToVis}}" />

								<MenuItem
									Command="{Binding Data.BookmarkFolder.RecentFolderAddCommand, Source={StaticResource DataContextProxy}}"
									CommandParameter="{Binding}"
									Header="{x:Static loc:Strings.CMD_RecentFolderAdd_Label}"
									ToolTip="{x:Static loc:Strings.CMD_RecentFolderAdd_TT}"
									Visibility="{Binding Data.BookmarkFolder.RecentFolderCommandCanExecute, Source={StaticResource DataContextProxy}, Converter={StaticResource BoolToVis}}" />

								<MenuItem
									Command="{Binding Data.BookmarkFolder.RecentFolderRemoveCommand, Source={StaticResource DataContextProxy}}"
									CommandParameter="{Binding}"
									Header="{x:Static loc:Strings.CMD_RecentFolderRemove_Label}"
									ToolTip="{x:Static loc:Strings.CMD_RecentFolderRemove_TT}"
									Visibility="{Binding Data.BookmarkFolder.RecentFolderCommandCanExecute, Source={StaticResource DataContextProxy}, Converter={StaticResource BoolToVis}}" />

								<Separator />


								<MenuItem
									Command="{Binding Path=Data.RefreshViewCommand, Source={StaticResource DataContextProxy}}"
									CommandParameter="{Binding}"
									Header="Refresh"
									ToolTip="Refresh browser view" />

								<MenuItem
									Command="{Binding Path=Data.CreateFolderCommand, Source={StaticResource DataContextProxy}}"
									CommandParameter="{Binding}"
									Header="New Folder"
									ToolTip="Create a new folder" />

								<MenuItem
									Command="{Binding Path=Data.StartRenameCommand, Source={StaticResource DataContextProxy}}"
									CommandParameter="{Binding}"
									Header="Rename"
									ToolTip="Rename a folder" />
							</ContextMenu>
						</StackPanel.ContextMenu>
						<Image
							Width="16"
							Height="16"
							Margin="2,0"
							VerticalAlignment="Center"
							Focusable="False"
							Source="{Binding Path=., Converter={StaticResource BrowseItemTypeToShellImageConverter}}" />

						<EditInPlace:EditBox
							Margin="2,0"
							HorizontalAlignment="Left"
							VerticalAlignment="Stretch"
							DisplayText="{Binding ItemDisplayString, Mode=OneWay, UpdateSourceTrigger=PropertyChanged}"
							Focusable="True"
							InvalidInputCharacters="{x:Static loc:Strings.ForbiddenRenameKeys}"
							InvalidInputCharactersErrorMessage="{x:Static loc:Strings.ForbiddenRenameKeysMessage}"
							InvalidInputCharactersErrorMessageTitle="{x:Static loc:Strings.ForbiddenRenameKeysTitle}"
							IsReadOnly="{Binding IsReadOnly}"
							RenameCommand="{Binding Path=Data.RenameCommand, Source={StaticResource DataContextProxy}}"
							RenameCommandParameter="{Binding}"
							Text="{Binding Path=ItemName, Mode=OneWay, UpdateSourceTrigger=PropertyChanged}"
							ToolTip="{Binding ItemPath, Mode=OneWay, UpdateSourceTrigger=PropertyChanged}"
							ToolTipService.ShowOnDisabled="True" />
						<!--  Its important to use margin Margin="2,0" since overlay will otherwise not work  -->
					</StackPanel>
				</HierarchicalDataTemplate>
			</TreeView.ItemTemplate>
			<TreeView.ItemContainerStyle>
				<Style BasedOn="{StaticResource {x:Type TreeViewItem}}" TargetType="{x:Type TreeViewItem}">
					<Setter Property="behav:TreeViewItemExpanded.Command" Value="{Binding Path=Data.ExpandCommand, Source={StaticResource DataContextProxy}, Mode=OneWay, UpdateSourceTrigger=PropertyChanged}" />
					<Setter Property="IsExpanded" Value="{Binding IsExpanded, Mode=TwoWay}" />
					<!--  Setter Property="IsSelected" Value="{Binding IsSelected, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}" /  -->
				</Style>
			</TreeView.ItemContainerStyle>
		</TreeView>
	</Grid>
</UserControl>
